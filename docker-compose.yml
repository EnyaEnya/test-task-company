version: '3.8'
services:
  keycloak:
    image: quay.io/keycloak/keycloak:25.0.2
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
    healthcheck:
      test: /opt/keycloak/bin/kcadm.sh get http://localhost:8080/realms/TestCompanyRealm --server http://localhost:8080 --realm master
      start_period: "10s"
      interval: "3s"
      timeout: "2s"
      retries: 20
    volumes:
      - './config/keycloak/import/realm-export.json:/opt/keycloak/data/import/realm-export.json'
    ports:
      - '8082:8080'
    command: start-dev --import-realm --log-level=DEBUG
    depends_on:
      keycloak-db:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  keycloak-db:
    image: postgres:16
    labels:
      # Подключение будет проигнорировано
      org.springframework.boot.ignore: true
    user: postgres
    ports:
      - '5430:5432'
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak
    healthcheck:
      test: "pg_isready -U keycloak -d keycloak"
      interval: "10s"
      timeout: "5s"
      retries: 5
    volumes:
      - './keycloak_localhost-2024_11_06_13_03_32-dump.sql:/docker-entrypoint-initdb.d/db.sql'
      - 'postgres-keycloak-data:/var/lib/postgresql/data'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
  backend:
    image: server:0.0.3
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8181:8181"
    depends_on:
      - db
    environment:
      - SERVER_PORT= 8181
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db/test_task_db

  db:
    image: postgres:16
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test_task_db
    healthcheck:
      test: "pg_isready -U user -d test_task_db"
      interval: "10s"
      timeout: "5s"
      retries: 5
    volumes:
      - 'postgres-data:/var/lib/postgresql/data'
  nginx:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      - './server.conf:/etc/nginx/sites-enabled/server.conf'
volumes:
  postgres-data:
  postgres-keycloak-data: